@model PaginatedList<ProjWebProgramming.Models.Director>

@{
    ViewData["Title"] = "Index";
}

<h1>Director</h1>

<p>
    <a class="btn btn-primary" asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
            <input type="submit" value="Search" class="btn btn-outline-primary" /> |
            <a class="btn btn-outline-secondary" asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table table-striped table-dark">
    <thead>
        <tr>
            <th>
                Image
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]"> First Name</a>
            </th>
            <th>
                Last Name
            </th>
            <th>
                Nationality
            </th>
            <th>
                BirthDate
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td class="align-middle">
                @if (item.Image != null)
                {
                    var base64 = Convert.ToBase64String(item.Image);
                    var img = string.Format("data:image/jpg;base64,{0}", base64);
                    <img src="@img" class="rounded-circle" style="max-width: 150px; height: 150px" />
                }
                else
                {
                    <img src="~/images/noimage.jpg" class="rounded-circle" style="max-width: 150px" />
                }
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
                <td class="align-middle">
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.Nationality)
            </td>
            <td class="align-middle">
                @Html.DisplayFor(modelItem => item.BirthDate)
            </td>
            <td class="align-middle">
                <a class="btn btn-warning" asp-action="Edit" asp-route-id="@item.DirectorId">Edit</a> |
                    <a class="btn btn-info" asp-action="Details" asp-route-id="@item.DirectorId">Details</a> |
                    <a class="btn btn-danger" asp-action="Delete" asp-route-id="@item.DirectorId">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">

    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
    </svg>

</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-pageNumber="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">

    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z" />
    </svg>
</a>
